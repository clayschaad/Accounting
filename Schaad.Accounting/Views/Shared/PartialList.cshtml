@using Schaad.Accounting.Common.Extensions;
@model List<Schaad.Accounting.Datasets.TransactionDataset>
@{
    Layout = "";
    var account = ViewBag.Account as Schaad.Accounting.Datasets.AccountDataset;
    var accountBalance = account.Balance;
    if (account.Class == 3)
    {
        accountBalance *= -1;
    }
}
<table width="100%">
    <tr>
        <td>
            @account.Name: @accountBalance.ToFormattedString() @account.Currency
            @if(account.LastBankBalance != 0)
            {
                <span> / Banksaldo: @account.LastBankBalance.ToFormattedString() @account.Currency / Differenz: @Math.Round(account.Balance - account.LastBankBalance)</span>
            }
            <span> / @Model.Count() Transaktionen</span>
        </td>
        <td align="right">
            @if(account.Number >= 4000)
            {
                <a href="/Chart/AccountExpensesPerMonth/@account.Id">
                    <span class="glyphicon glyphicon-stats" aria-hidden="true" title="Ausgaben pro Monat"></span>
                </a>
            }

            <a href="/Report/AccountExport/@account.Id">
                <span class="glyphicon glyphicon-list" aria-hidden="true"  title="Export als csv"></span>
            </a>
        </td>
    </tr>
</table>

<table id="transactions" class="stripe hover" data-order='[[ 0, "desc" ], [1, "desc"]]'>
    <thead>
        <tr>
            <th>Buchungsdatum</th>
            <th>Valutadatum</th>
            <th>Text</th>
            <th>Gegenkonto</th>
            <th class="dt-right">Soll</th>
            <th class="dt-right">Haben</th>
            <th class="dt-right"></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var line in Model)
        {
            <tr>
                <td>@line.BookingDate.ToString("dd.MM.yyyy")</td>
                <td>@line.ValueDate.ToString("dd.MM.yyyy")</td>
                <td>@line.Text</td>

                @if (ViewBag.AccountId == @line.OriginAccountId)
                {
                    <td>@line.TargetAccount.Number / @line.TargetAccount.Name</td>
                    <td class="dt-right"></td>
                    <td class="dt-right">@line.GetValue(account.IsFxAccount).ToFormattedString()</td>
                }
                else
                {
                    <td>@line.OriginAccount.Number / @line.OriginAccount.Name</td>
                    <td class="dt-right">@line.GetValue(account.IsFxAccount).ToFormattedString()</td>
                    <td class="dt-right"></td>
                }
                <td class="dt-right">
                    @if (string.IsNullOrEmpty(line.BankTransactionId))
                    {
                        <a class="edit" data-id="@line.Id">
                            <span class="glyphicon glyphicon-pencil" aria-hidden="true"></span>
                        </a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>